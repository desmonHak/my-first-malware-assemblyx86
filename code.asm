[bits 32]
%define STD_OUTPUT_HANDLE -11

section .bss

section .text
    global _WinMain@16           ; Declaracion de la funcion principal del programa
    extern _GetStdHandle@4       ; Declaracion de la funcion GetStdHandle de Windows
    extern _WriteFile@20         ; Declaracion de la funcion WriteFile de Windows
    extern _ExitProcess@4        ; Declaracion de la funcion ExitProcess de Windows

_WinMain@16:
    ; Reservar espacio en la pila para la variable local
    sub esp, 4

    ; Obtener el identificador de la salida estándar
    ; HANDLE ebx = GetStdHandle(DWORD STD_OUTPUT_HANDLE)
    push STD_OUTPUT_HANDLE       ; Parametro: STD_OUTPUT_HANDLE (-11)
    call _GetStdHandle@4         ; Llama a la funcion GetStdHandle para obtener el identificador de la salida estándar
    mov ebx, eax                 ; Almacena el identificador de la salida estándar en ebx

    ; Escribir el mensaje en la salida estándar
    ; BOOL WriteFile(
    ;   [in]                HANDLE       hFile,
    ;   [in]                LPCVOID      lpBuffer,
    ;   [in]                DWORD        nNumberOfBytesToWrite,
    ;   [out, optional]     LPDWORD      lpNumberOfBytesWritten,
    ;   [in, out, optional] LPOVERLAPPED lpOverlapped
    ; );
    ; WriteFile(ebx, message, length, eax, 0)

    

    jmp _a
    db 0x90, 0xaf, 0x11, 0xa0, 0x90, 0x90, 0xaf, 0x11, 0xa0, 0x90
    _a:
    push 0                       ; Parametro: lpOverlapped (0)

    lea eax, [esp+4]             ; Calcula la direccion del Parametro lpNumberOfBytesWritten
    push eax                     ; Parametro: lpNumberOfBytesWritten
    push dword length            ; Parametro: nNumberOfBytesToWrite (longitud del mensaje)
    push message                 ; Parametro: lpBuffer (puntero al mensaje)
    push ebx                     ; Parametro: hFile (identificador de la salida estándar)

    times 5 dw 0xcd10
    jmp _b
    _b:
    call _WriteFile@20           ; Llama a la funcion WriteFile para escribir el mensaje en la consola
    times 2 db 0x90

    ; Salir del programa
    ; ExitProcess(0)
    push 0                       ; Parametro: exitCode (0)
    call _ExitProcess@4          ; Llama a la funcion ExitProcess para terminar el programa


section .data
    message db 'Hello, World!', 0  ; Definición del mensaje a mostrar en la consola
    length: equ $-message

times 510 -( $ - $$ ) db 0